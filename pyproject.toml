[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "conduit-api"
version = "0.1.0"
description = "Realworld is a medium clone. This implementation uses Django REST Framework to create a backend service for the blog."
authors = [{ name = "Bogdan Veliscu", email = "bogdan.veliscu@outlook.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12,<4.0"

dependencies = [
    "Django>=5.0,<6.0",
    "djangorestframework>=3.15.1,<4.0",
    "django-filter>=24.2,<25.0",
    "djangorestframework-simplejwt>=5.3.1,<6.0",
    "psycopg2-binary>=2.9.9,<3.0",
    "uvicorn[standard]>=0.30.1,<1.0",
    "gunicorn>=21.2.0,<22.0",
    "whitenoise>=6.6.0,<7.0",
    "django-taggit>=5.0.1,<6.0",
    "django-htmx>=1.18.0,<2.0",
    "channels>=4.2.0,<5.0",
    "channels-redis>=4.2.1,<5.0",
    "drf-yasg>=1.21.8,<2.0",
    "django-storages>=1.14.4,<2.0",
    "boto3>=1.35.10,<2.0",
    "django-cors-headers>=4.6.0,<5.0",
    "django-redis>=5.4.0,<6.0",
    "markdown>=3.7",
    "pillow>=11.0.0",
    "django-compressor>=4.5.1,<5.0",
    "sentry-sdk>=1.42.0,<2.0",
    "blackfire>=1.20.22",
    "locust>=2.32.3",
    "django-prometheus>=2.3.1,<3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.2,<9.0",
    "factory-boy>=3.3.1,<4.0",
    "pytest-django>=4.9.0,<5.0",
    "ruff>=0.4.2,<1.0",
    "mypy>=1.8.0,<2.0",
    "django-debug-toolbar>=4.4.0,<5.0",
]

profiling = [
    'blackfire>=1.20.22,<2.0.0; sys_platform == "darwin" or sys_platform == "win32"',
    'blackfire>=1.20.22,<2.0.0; sys_platform == "linux" and platform_machine != "aarch64"',
    'blackfire==1.20.21; sys_platform == "linux" and platform_machine == "aarch64"',
]

[tool.hatch.build.targets.wheel]
packages = ["conduit"]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true
