services:
  app:
    build:
      context: .
      dockerfile: Dockerfile

      args:
        INSTALL_DEV: false
    volumes:
      - ./conduit/:/code/conduit/
    ports:
      - 8000:8000
    env_file: .env
    stdin_open: false
    tty: true
    depends_on:
      - db

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - 3000:80
    env_file: ../frontend/.env.production
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost/api

  db:
    image: postgres:15
    ports:
      - ${POSTGRES_DEFAULT_PORT}:5432
    volumes:
      - ./.postgres:/var/lib/postgresql/data
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER?Variable not set}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # volumes:
    #   - ./redis/redis.conf:/usr/local/etc/redis/redis.conf # Mount custom Redis configuration
    # command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conduit/static/:/var/www/static/
      - ./conduit/media/:/var/www/media/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app

  certbot:
    image: certbot/certbot:latest
    volumes:
      - /var/certbot/conf:/etc/letsencrypt/:rw
      - /var/certbot/www/:/var/www/certbot/:rw
    depends_on:
      - app
      - nginx

volumes:
  .postgres:
  conduit:
  static:
  media:
